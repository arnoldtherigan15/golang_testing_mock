// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	domain "section9/domain"
	helpers "section9/order/helpers"

	mock "github.com/stretchr/testify/mock"
)

// OrderRepository is an autogenerated mock type for the OrderRepository type
type OrderRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: order
func (_m *OrderRepository) Create(order *domain.Order) (*domain.Order, error) {
	ret := _m.Called(order)

	var r0 *domain.Order
	if rf, ok := ret.Get(0).(func(*domain.Order) *domain.Order); ok {
		r0 = rf(order)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Order)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*domain.Order) error); ok {
		r1 = rf(order)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Done provides a mock function with given fields: order
func (_m *OrderRepository) Done(order *domain.Order) (bool, error) {
	ret := _m.Called(order)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*domain.Order) bool); ok {
		r0 = rf(order)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*domain.Order) error); ok {
		r1 = rf(order)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindAll provides a mock function with given fields: pagination
func (_m *OrderRepository) FindAll(pagination helpers.Pagination) (*helpers.Pagination, error) {
	ret := _m.Called(pagination)

	var r0 *helpers.Pagination
	if rf, ok := ret.Get(0).(func(helpers.Pagination) *helpers.Pagination); ok {
		r0 = rf(pagination)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*helpers.Pagination)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(helpers.Pagination) error); ok {
		r1 = rf(pagination)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindByID provides a mock function with given fields: ID
func (_m *OrderRepository) FindByID(ID int) (*domain.Order, error) {
	ret := _m.Called(ID)

	var r0 *domain.Order
	if rf, ok := ret.Get(0).(func(int) *domain.Order); ok {
		r0 = rf(ID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Order)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(ID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
